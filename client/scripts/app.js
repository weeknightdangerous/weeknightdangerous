angular.module("trailApp",["ui.bootstrap","trailApp.services","trailApp.directives","trailApp.intro","trailApp.topNav","trailApp.bkgd","trailApp.profile","trailApp.myFav","trailApp.comment","trailApp.trailsList","ngCookies","ui.router","ngAnimate","ngMap"]).config(["$stateProvider","$urlRouterProvider",function(t,e,r){e.otherwise("/home"),t.state("home",{url:"/home",views:{intro:{templateUrl:"app/intro/intro.html",controller:"introCtrl",controllerAs:"intro"},bkgd:{templateUrl:"app/bkgd/bkgd.html",controller:"bkgdCtrl"}}}).state("trailsList",{url:"/trailsList",views:{trailsList:{templateUrl:"app/trailsList/trailsList.html",controller:"TrailsListCtrl",controllerAs:"trails"},bkgd:{templateUrl:"app/bkgd/bkgd.html",controller:"bkgdCtrl"}}}).state("trail",{url:"/trail/:trailId",views:{trail:{templateUrl:"app/trailProfile/trailProfile.html",controller:"profileCtrl",controllerAs:"profile"},comment:{templateUrl:"app/comment/comment.html",controller:"commentsCtrl",controllerAs:"comments"}}}).state("myFav",{url:"/myFav",views:{trail:{templateUrl:"app/myFav/myFav.html",controller:"myFavCtrl",controllerAs:"myFav"},bkgd:{templateUrl:"app/bkgd/bkgd.html",controller:"bkgdCtrl"}}})}]),angular.module("trailApp.services",["ngCookies"]).factory("showTrails",function(t){var e=this;e.trailId=0,e.list={},e.location;var r=function(t){e.location=t},o=function(){return t({method:"GET",url:"/api/trails/alltrails",params:e.location}).then(function(t){return e.list.data=t.data,e.list.location=e.location,e.list})["catch"](function(t){console.log("postLocation error: ",t)})},a=function(t){e.trailId=t},n=function(){return e.trail},i=function(t){return e.trail=t,e.trail};return{userLocation:r,getTrails:o,getTrail:n,getTrailId:a,setTrail:i}}).factory("Auth",function(t){var e,r=!1,o=function(){return e=t.get("trailrpark"),void 0!==e&&(r=!0,e=JSON.parse(e)),r},a=function(){return void 0!==e?e.username:void 0},n=function(){return void 0!==e?e.image:void 0},i=function(){return t.remove("trailrpark"),r=!1};return{checkUser:o,getUser:a,getImage:n,removeUser:i}}).factory("commentForm",function(t){var e=function(e,r){return t({method:"POST",url:"/comment",data:{comment:e,trailId:r},headers:{"Content-Type":"application/json"}}).then(function(t){return t})["catch"](function(t){console.error("comments service Error: ",t)})},r=function(e){return t({method:"POST",url:"/commentList",data:{trailId:e},headers:{"Content-Type":"application/json"}}).then(function(t){return t.data})["catch"](function(t){console.error("get comments service Error: ",t)})};return{postComments:e,getComments:r}}).factory("addFav",function(t,e){var r=function(){var r=e.params.trailId;return t({method:"POST",url:"/addFav",data:{trailId:r},headers:{"Content-Type":"application/json"}}).then(function(t){return console.log("addFav service result:",t),t})["catch"](function(t){console.error("addFav service Error:",t)})},o=function(){return console.log("services getFav is working"),t({method:"GET",url:"/myfavs",headers:{"Content-Type":"application/json"}}).then(function(t){return console.log("getFav service result:",t),t})["catch"](function(t){console.error("getFav service error",t)})};return{postFav:r,getFav:o}}).factory("imageService",["$q","$http",function(t,e){var r=[{lat:47.9691,lon:-123.4983,dist:5e3},{lat:43.7904,lon:-110.6818,dist:5e3},{lat:37.748543,lon:-119.588576,dist:5e3},{lat:36.3615,lon:-121.8563,dist:5e3}],o=r[Math.floor(Math.random()*r.length)],a={},n={};return n.homeImages=function(){a=e({method:"GET",url:"/api/insta/geo",params:o})},n.locImages=function(t){a=e({method:"GET",url:"/api/geo/loc",params:t})},n.trailImages=function(t){a=e({method:"GET",url:"/api/insta/geo",params:t})},n.getImages=function(){return a},n}]).directive("starRating",function(){return{restrict:"A",template:'<ul class="rating"><li ng-repeat="star in stars" ng-class="star">â˜…</li></ul>',scope:{ratingValue:"=",max:"="},link:function(t,e,r){t.stars=[];for(var o=0;o<t.max;o++)t.stars.push({filled:o<t.ratingValue})}}}),angular.module("trailApp.intro",[]).controller("introCtrl",function(t,e,r){r.homeImages();var o=this;o.location;o.sendLocation=function(r){console.log("intro sendLocation: ",r),e.userLocation(r),t.location.href="/#/trailsList"},o.showlist=!1,o.data=[],o.getList=function(t){o.city=capitalize(t.city),o.state=capitalize(t.state);var a={placename:o.city+","+o.state};return r.locImages(a),e.getLocation(t).then(function(t){o.showList=!0,o.data=t})["catch"](function(t){console.log("getLocation err: ",t)})}});var trailsApp=angular.module("trailApp.topNav",[]).controller("topNav",function(t,e){var r=this;r.user,r.image,r.signInToggle=e.checkUser(),r.signIn=function(){t.location.assign("/authorize_user")},r.myFav=function(){t.location.href="/#/myFav"},r.signOut=function(){e.removeUser(),console.log("Auth.cookie",e.cookie),r.signInToggle=!r.signInToggle,t.location.href="/"},r.getUser=function(){r.user=e.getUser(),r.image=e.getImage()},r.getUser()});angular.module("trailApp.bkgd",[]).controller("bkgdCtrl",["$scope","imageService",function(t,e){t.pics={},e.getImages().then(function(e){t.pics=e}),t.$watch(function(){return e.getImages()},function(e,r){e!==r&&e.then(function(e){t.pics=e})})}]),angular.module("trailApp.profile",["ui.bootstrap"]).controller("profileCtrl",function(t,e,r,o,a,n,i){i.getMap().then(function(t){console.log(t.getCenter()),console.log("markers",t.markers),console.log("shapes",t.shapes)});var l=this;l.data={},l.slides={},l.loading=!0,l.myFavAdd=!0,l.showModal=!1,l.open=function(e){l.selected=e,t.open({template:'<my-modal modal="modal"><div class="modal-body"><img class="img-responsive" src="{{ viewer.slide.image.high_res.url }}"><a class="user-link" target="blank" href="{{viewer.slide.link}}"><img class="img-circle profile gram-user" src="{{viewer.slide.user.profile_pic}}"></a></div></my-modal>',controller:"ModalInstanceCtrl as viewer",resolve:{items:function(){return console.log(l.selected),l.selected}}})},l.rating,a.ratings=[{current:l.rating,max:5}],l.getTrail=function(){l.data=e.getTrail(),l.rating=l.data.rating},l.addFav=function(){return r.postFav().then(function(t){console.log("addFavClient result:",t),l.myFavAdd=!1})["catch"](function(t){console.error("addFavClient error:",t)})},l.addMap=function(){},l.getTrail(),o.getImages().then(function(t){l.slides=t,l.loading=!1})}).controller("ModalInstanceCtrl",function(t,e){var r=this;r.slide=e}),angular.module("trailApp.comment",[]).controller("commentsCtrl",function(t,e,r,o){var a=this;a.user=!1,a.data=[],a.username;var n=o.params.trailId;a.isUser=function(){a.user=t.checkUser(),a.username=t.getUser(),console.log("comments.user:",a.user)},a.getComments=function(){return console.log("stateParams",r),console.log("state.params",o.params),e.getComments(n).then(function(t){return console.log("getComments result client:",t),a.data=t})["catch"](function(t){console.error("get comments client:",t)})},a.update=function(t,r){return r?e.postComments(t,n).then(function(t){console.log("post comments client result:",t),a.getComments(),a.text=""})["catch"](function(t){console.error("post comments client Error:",t)}):void 0},a.isUser(),a.getComments()}),angular.module("trailApp.trailsList",[]).controller("TrailsListCtrl",function(t,e,r,o){function a(t){return t.charAt(0).toUpperCase()+t.slice(1)}var n=this;n.data=[],n.city,n.state,n.noTrials=!1,o.ratings=[{current:0,max:5}],n.getList=function(){return n.loader=!0,t.getTrails().then(function(t){console.log("trailsList ctrl result:",t.data),0===t.data.length&&(n.noTrials=!0),n.data=t.data;var r=t.location;n.loader=!1,n.city=a(r.city),n.state=a(r.state);var o={placename:n.city+","+n.state};e.locImages(o)})["catch"](function(t){console.log("getLocation err: ",t)})},n.getTrail=function(o){var a={lat:o.lat,lon:o.lon,dist:"1000"};e.trailImages(a),t.setTrail(o);var n=o.unique_id;r.go("trail",{trailId:n})},n.getList()});var trailsApp=angular.module("trailApp.myFav",[]).controller("myFavCtrl",function(t,e,r,o,a){var n=this;n.data,o.ratings=[{current:0,max:5}],n.getFavList=function(){console.log("myFave.getFavList is working"),n.loader=!0,t.getFav().then(function(t){console.log("getFavList client result:",t.data),n.loader=!1,n.data=t.data,console.log("myFav.data:",n.data)})["catch"](function(t){console.error("getFavList client error:",t)})},n.getTrail=function(t){console.log("myFav.getTrail trail:",t),e.setTrail(t);var o=t.unique_id;r.go("trail",{trailId:o})},n.getFavList(),a.getImages().then(function(t){o.pics=t})});angular.module("trailApp.directives",[]).directive("gramModal",function(){});